{"version":3,"sources":["index.js"],"names":["Square","props","className","winningSquare","onClick","value","Board","i","winner","this","squares","key","board","cell","j","winningSquares","indexOf","concat","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isDescending","slice","length","calculateWinner","setState","location","step","status","current","moves","map","move","desc","jumpTo","handleClick","reverse","sortHistory","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kMAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAW,WAAaD,EAAME,cAAgB,iBAAmB,IAAMC,QAASH,EAAMG,SAC3FH,EAAMI,O,IAKPC,E,qLACSC,EAAGC,GAAS,IAAD,OACtB,OACE,kBAACR,EAAD,CACEG,cAAeK,EACfH,MAAOI,KAAKR,MAAMS,QAAQH,GAC1BH,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,IAClCI,IAAKJ,M,+BAST,IAHA,IAAIK,EAAQ,GACRC,EAAO,EAEFN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAG1B,IAFA,IAAIG,EAAU,GAELI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMX,EAAgBM,KAAKR,MAAMc,iBAA+D,IAA7CN,KAAKR,MAAMc,eAAeC,QAAQH,GACrFH,EAAUA,EAAQO,OAAOR,KAAKS,aAAaL,EAAMV,IACjDU,IAEFD,EAAQA,EAAMK,OAAO,yBAAKf,UAAU,YAAYS,IAAKJ,GAAIG,IAG3D,OAAOE,M,GA3BSO,IAAMC,WA+BpBC,E,YACJ,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KACDqB,MAAQ,CACXC,QAAS,CAAC,CACRb,QAASc,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,EACTC,cAAc,GARC,E,yEAYPrB,GACV,IAWMgB,EAAUd,KAAKa,MAAMC,QAAQM,MAAM,EAAGpB,KAAKa,MAAMI,WAAa,GAE9DhB,EADUa,EAAQA,EAAQO,OAAS,GACjBpB,QAAQmB,QAC5BE,EAAgBrB,IAAYA,EAAQH,KAGxCG,EAAQH,GAAKE,KAAKa,MAAMK,QAAU,IAAM,IACxClB,KAAKuB,SAAS,CACZT,QAASA,EAAQN,OAAO,CACtB,CACEP,QAASA,EACTuB,SAtBY,CAChB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAaoB1B,MAGxBmB,WAAYH,EAAQO,OACpBH,SAAUlB,KAAKa,MAAMK,a,oCAKvBlB,KAAKuB,SAAS,CACZJ,cAAenB,KAAKa,MAAMM,iB,6BAIvBM,GACLzB,KAAKuB,SAAS,CACZN,WAAYQ,EACZP,QAAUO,EAAO,IAAO,M,+BAIlB,IAgBJC,EAhBG,OACDZ,EAAUd,KAAKa,MAAMC,QACrBa,EAAUb,EAAQd,KAAKa,MAAMI,YAC7BlB,EAASuB,EAAgBK,EAAQ1B,SAEjC2B,EAAQd,EAAQe,KAAI,SAACJ,EAAMK,GAC/B,IAAMC,EAAOD,EACT,eAAiBA,EAAO,MAAQhB,EAAQgB,GAAMN,SAC9C,mBACJ,OACE,wBAAItB,IAAK4B,GACP,4BAAQnC,QAAS,kBAAM,EAAKqC,OAAOF,IAAOrC,UAAWqC,IAAS,EAAKjB,MAAMI,WAAa,gBAAkB,IAAKc,OAcnH,OAPEL,EADE3B,EACO,WAAaA,EAAOA,OACD,KAAnBe,EAAQO,OACX,eAEG,iBAAmBrB,KAAKa,MAAMK,QAAU,IAAM,KAIvD,yBAAKzB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACI,EAAD,CACES,eAAgBP,EAASA,EAAOE,QAAU,KAC1CA,QAAS0B,EAAQ1B,QACjBN,QAAS,SAACG,GAAD,OAAO,EAAKmC,YAAYnC,OAGrC,yBAAKL,UAAU,aACb,6BAAMiC,GACN,4BAAK1B,KAAKa,MAAMM,aAAeS,EAAQA,EAAMM,WAC7C,4BAAQvC,QAAS,kBAAM,EAAKwC,gBAA5B,YACYnC,KAAKa,MAAMM,aAAe,aAAe,kB,GA/F5CT,IAAMC,WA8GzB,SAASW,EAAgBrB,GAWvB,IAVA,IAAMmC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAtC,EAAI,EAAGA,EAAIsC,EAAMf,OAAQvB,IAAK,CAAC,IAAD,cACnBsC,EAAMtC,GADa,GAC9BuC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItC,EAAQoC,IAAMpC,EAAQoC,KAAOpC,EAAQqC,IAAMrC,EAAQoC,KAAOpC,EAAQsC,GACpE,MAAO,CACLxC,OAAQE,EAAQoC,GAChBpC,QAAS,CAACoC,EAAGC,EAAGC,IAItB,OAAO,KAzBTC,IAASC,OACP,kBAAC7B,EAAD,MACA8B,SAASC,eAAe,U","file":"static/js/main.ad91476f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className={'square ' + (props.winningSquare ? 'winning-square' : '') } onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  renderSquare(i, winner) {\n    return (\n      <Square\n        winningSquare={winner}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n        key={i}\n      />\n    );\n  }\n\n  render() {\n    let board = [];\n    let cell = 0;\n\n    for (let i = 0; i < 3; i++) {\n      let squares = [];\n\n      for (let j = 0; j < 3; j++) {\n        const winningSquare = this.props.winningSquares && this.props.winningSquares.indexOf(cell) !== -1;\n        squares = squares.concat(this.renderSquare(cell, winningSquare));\n        cell++;\n      }\n      board = board.concat(<div className=\"board-row\" key={i}>{squares}</div>);\n    };\n\n    return board;\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true\n    }\n  }\n\n  handleClick(i) {\n    const locations = [\n      [1, 1],\n      [2, 1],\n      [3, 1],\n      [1, 2],\n      [2, 2],\n      [3, 2],\n      [1, 3],\n      [2, 3],\n      [3, 3]\n    ];\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          location: locations[i]\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move \n        ? \"Go to move #\" + move + \" @ \" + history[move].location\n        : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)} className={move === this.state.stepNumber ? 'selected-move' : ''}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner.winner;\n    } else if (history.length === 10) {\n      status = `It's a draw!`;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            winningSquares={winner ? winner.squares : null}\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\n          <button onClick={() => this.sortHistory()}>\n            Sort by: {this.state.isDescending ? \"Descending\" : \"Asending\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        squares: [a, b, c]\n      };\n    }\n  }\n  return null;\n}"],"sourceRoot":""}